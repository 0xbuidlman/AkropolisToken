{
  "contractName": "PausableMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "drasticMeasureTaken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "normalProcess",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drasticMeasure",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600160146101000a81548160ff02191690831515021790555034801561002b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160156101000a81548160ff02191690831515021790555060006002819055506107a3806100e06000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd146100b45780633f4ba83a146100df5780634e71e0c8146100f65780635c975abb1461010d57806376657b8e1461013c5780638456cb591461016b5780638da5cb5b146101825780639958f045146101d9578063e30c3978146101f0578063e7651d7a14610247578063f2fde38b1461025e575b600080fd5b3480156100c057600080fd5b506100c96102a1565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506100f46102a7565b005b34801561010257600080fd5b5061010b610366565b005b34801561011957600080fd5b50610122610505565b604051808215151515815260200191505060405180910390f35b34801561014857600080fd5b50610151610518565b604051808215151515815260200191505060405180910390f35b34801561017757600080fd5b5061018061052b565b005b34801561018e57600080fd5b506101976105ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e557600080fd5b506101ee61060f565b005b3480156101fc57600080fd5b50610205610646565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025357600080fd5b5061025c61066c565b005b34801561026a57600080fd5b5061029f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069c565b005b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561030257600080fd5b600160149054906101000a900460ff16151561031d57600080fd5b6000600160146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103c257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160149054906101000a900460ff1681565b600160159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058657600080fd5b600160149054906101000a900460ff161515156105a257600080fd5b60018060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff16151561062a57600080fd5b60018060156101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615151561068857600080fd5b600260008154809291906001019190505550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561073357600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058205095e8bc6bd564f5c0f41aac7872ed258b660c2459f1e03451e62f060c050fe60029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd146100b45780633f4ba83a146100df5780634e71e0c8146100f65780635c975abb1461010d57806376657b8e1461013c5780638456cb591461016b5780638da5cb5b146101825780639958f045146101d9578063e30c3978146101f0578063e7651d7a14610247578063f2fde38b1461025e575b600080fd5b3480156100c057600080fd5b506100c96102a1565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506100f46102a7565b005b34801561010257600080fd5b5061010b610366565b005b34801561011957600080fd5b50610122610505565b604051808215151515815260200191505060405180910390f35b34801561014857600080fd5b50610151610518565b604051808215151515815260200191505060405180910390f35b34801561017757600080fd5b5061018061052b565b005b34801561018e57600080fd5b506101976105ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e557600080fd5b506101ee61060f565b005b3480156101fc57600080fd5b50610205610646565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025357600080fd5b5061025c61066c565b005b34801561026a57600080fd5b5061029f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069c565b005b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561030257600080fd5b600160149054906101000a900460ff16151561031d57600080fd5b6000600160146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103c257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160149054906101000a900460ff1681565b600160159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058657600080fd5b600160149054906101000a900460ff161515156105a257600080fd5b60018060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff16151561062a57600080fd5b60018060156101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615151561068857600080fd5b600260008154809291906001019190505550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561073357600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058205095e8bc6bd564f5c0f41aac7872ed258b660c2459f1e03451e62f060c050fe60029",
  "sourceMap": "92:332:4:-;;;337:5:3;316:26;;;;;;;;;;;;;;;;;;;;190:74:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;190:74:4;793:10:2;785:5;;:18;;;;;;;;;;;;;;;;;;832:1;809:12;;:25;;;;;;;;;;;;;;;;;;239:5:4;217:19;;:27;;;;;;;;;;;;;;;;;;258:1;250:5;:9;;;;92:332;;;;;;",
  "deployedSourceMap": "92:332:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:20:4;;;;;;;;;;;;;;;;;;;;;;;907:92:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:92:3;;;;;;1529:164:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1529:164:2;;;;;;316:26:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;130:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;130:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;735:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;735:90:3;;;;;;484:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;338:83:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:83:4;;;;;;508:27:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;268:66:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:66:4;;;;;;1309:136:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1309:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:20:4;;;;:::o;907:92:3:-;968:5:2;;;;;;;;;;;954:19;;:10;:19;;;946:28;;;;;;;;637:6:3;;;;;;;;;;;629:15;;;;;;;;969:5;960:6;;:14;;;;;;;;;;;;;;;;;;985:9;;;;;;;;;;907:92::o;1529:164:2:-;1122:12;;;;;;;;;;;1108:26;;:10;:26;;;1100:35;;;;;;;;1618:12;;;;;;;;;;;1590:41;;1611:5;;;;;;;;;;;1590:41;;;;;;;;;;;;1645:12;;;;;;;;;;;1637:5;;:20;;;;;;;;;;;;;;;;;;1686:1;1663:12;;:25;;;;;;;;;;;;;;;;;;1529:164::o;316:26:3:-;;;;;;;;;;;;;:::o;130:31:4:-;;;;;;;;;;;;;:::o;735:90:3:-;968:5:2;;;;;;;;;;;954:19;;:10;:19;;;946:28;;;;;;;;485:6:3;;;;;;;;;;;484:7;476:16;;;;;;;;798:4;789:6;;:13;;;;;;;;;;;;;;;;;;813:7;;;;;;;;;;735:90::o;484:20:2:-;;;;;;;;;;;;;:::o;338:83:4:-;637:6:3;;;;;;;;;;;629:15;;;;;;;;412:4:4;390:19;;:26;;;;;;;;;;;;;;;;;;338:83::o;508:27:2:-;;;;;;;;;;;;;:::o;268:66:4:-;485:6:3;;;;;;;;;;;484:7;476:16;;;;;;;;322:5:4;;:7;;;;;;;;;;;;;268:66::o;1309:136:2:-;968:5;;;;;;;;;;;954:19;;:10;:19;;;946:28;;;;;;;;1407:1;1386:23;;:9;:23;;;;1378:32;;;;;;;;1431:9;1416:12;;:24;;;;;;;;;;;;;;;;;;1309:136;:::o",
  "source": "pragma solidity ^0.4.24;\n\n\nimport \"../helpers/Pausable.sol\";\n\n\n// mock class using Pausable\ncontract PausableMock is Pausable {\n  bool public drasticMeasureTaken;\n  uint256 public count;\n\n  constructor() public {\n    drasticMeasureTaken = false;\n    count = 0;\n  }\n\n  function normalProcess() external whenNotPaused {\n    count++;\n  }\n\n  function drasticMeasure() external whenPaused {\n    drasticMeasureTaken = true;\n  }\n\n}",
  "sourcePath": "/Users/alexandermazaletskiy/Documents/Akropolis/UpgradeableERC20/contracts/mocks/PausableMock.sol",
  "ast": {
    "absolutePath": "/Users/alexandermazaletskiy/Documents/Akropolis/UpgradeableERC20/contracts/mocks/PausableMock.sol",
    "exportedSymbols": {
      "PausableMock": [
        295
      ]
    },
    "id": 296,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 256,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/alexandermazaletskiy/Documents/Akropolis/UpgradeableERC20/contracts/helpers/Pausable.sol",
        "file": "../helpers/Pausable.sol",
        "id": 257,
        "nodeType": "ImportDirective",
        "scope": 296,
        "sourceUnit": 255,
        "src": "27:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 258,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 254,
              "src": "117:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$254",
                "typeString": "contract Pausable"
              }
            },
            "id": 259,
            "nodeType": "InheritanceSpecifier",
            "src": "117:8:4"
          }
        ],
        "contractDependencies": [
          194,
          254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 295,
        "linearizedBaseContracts": [
          295,
          254,
          194
        ],
        "name": "PausableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 261,
            "name": "drasticMeasureTaken",
            "nodeType": "VariableDeclaration",
            "scope": 295,
            "src": "130:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 260,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "130:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 263,
            "name": "count",
            "nodeType": "VariableDeclaration",
            "scope": 295,
            "src": "165:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "211:53:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "drasticMeasureTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "217:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "239:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "217:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "217:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 270,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "250:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "258:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "250:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "250:9:4"
                }
              ]
            },
            "documentation": null,
            "id": 275,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:4"
            },
            "scope": 295,
            "src": "190:74:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "316:18:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "322:7:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "322:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "322:7:4"
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 277,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 215,
                  "src": "302:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:13:4"
              }
            ],
            "name": "normalProcess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:4"
            },
            "scope": 295,
            "src": "268:66:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "384:37:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 289,
                      "name": "drasticMeasureTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "390:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "412:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "390:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "390:26:4"
                }
              ]
            },
            "documentation": null,
            "id": 294,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 286,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 223,
                  "src": "373:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "373:10:4"
              }
            ],
            "name": "drasticMeasure",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:4"
            },
            "scope": 295,
            "src": "338:83:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 296,
        "src": "92:332:4"
      }
    ],
    "src": "0:424:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/alexandermazaletskiy/Documents/Akropolis/UpgradeableERC20/contracts/mocks/PausableMock.sol",
    "exportedSymbols": {
      "PausableMock": [
        295
      ]
    },
    "id": 296,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 256,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/alexandermazaletskiy/Documents/Akropolis/UpgradeableERC20/contracts/helpers/Pausable.sol",
        "file": "../helpers/Pausable.sol",
        "id": 257,
        "nodeType": "ImportDirective",
        "scope": 296,
        "sourceUnit": 255,
        "src": "27:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 258,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 254,
              "src": "117:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$254",
                "typeString": "contract Pausable"
              }
            },
            "id": 259,
            "nodeType": "InheritanceSpecifier",
            "src": "117:8:4"
          }
        ],
        "contractDependencies": [
          194,
          254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 295,
        "linearizedBaseContracts": [
          295,
          254,
          194
        ],
        "name": "PausableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 261,
            "name": "drasticMeasureTaken",
            "nodeType": "VariableDeclaration",
            "scope": 295,
            "src": "130:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 260,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "130:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 263,
            "name": "count",
            "nodeType": "VariableDeclaration",
            "scope": 295,
            "src": "165:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "211:53:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "drasticMeasureTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "217:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "239:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "217:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "217:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 270,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "250:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "258:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "250:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "250:9:4"
                }
              ]
            },
            "documentation": null,
            "id": 275,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:4"
            },
            "scope": 295,
            "src": "190:74:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "316:18:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "322:7:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "322:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "322:7:4"
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 277,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 215,
                  "src": "302:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:13:4"
              }
            ],
            "name": "normalProcess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:4"
            },
            "scope": 295,
            "src": "268:66:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "384:37:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 289,
                      "name": "drasticMeasureTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "390:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "412:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "390:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "390:26:4"
                }
              ]
            },
            "documentation": null,
            "id": 294,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 286,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 223,
                  "src": "373:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "373:10:4"
              }
            ],
            "name": "drasticMeasure",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:0:4"
            },
            "scope": 295,
            "src": "338:83:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 296,
        "src": "92:332:4"
      }
    ],
    "src": "0:424:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-17T13:43:17.164Z"
}